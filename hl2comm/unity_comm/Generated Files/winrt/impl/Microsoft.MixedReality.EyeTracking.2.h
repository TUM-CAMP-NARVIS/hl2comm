// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.230706.1

#pragma once
#ifndef WINRT_Microsoft_MixedReality_EyeTracking_2_H
#define WINRT_Microsoft_MixedReality_EyeTracking_2_H
#include "winrt/impl/Windows.Foundation.Numerics.1.h"
#include "winrt/impl/Microsoft.MixedReality.EyeTracking.1.h"
WINRT_EXPORT namespace winrt::Microsoft::MixedReality::EyeTracking
{
    struct WINRT_IMPL_EMPTY_BASES EyeGazeTracker : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTracker
    {
        EyeGazeTracker(std::nullptr_t) noexcept {}
        EyeGazeTracker(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTracker(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES EyeGazeTrackerFrameRate : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerFrameRate
    {
        EyeGazeTrackerFrameRate(std::nullptr_t) noexcept {}
        EyeGazeTrackerFrameRate(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerFrameRate(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES EyeGazeTrackerRawValues : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerRawValues
    {
        EyeGazeTrackerRawValues(std::nullptr_t) noexcept {}
        EyeGazeTrackerRawValues(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerRawValues(ptr, take_ownership_from_abi) {}
        static auto IsSupported(winrt::Microsoft::MixedReality::EyeTracking::EyeGazeTracker const& tracker, winrt::guid const& valueKey);
        static auto SendCommand(winrt::Microsoft::MixedReality::EyeTracking::EyeGazeTracker const& tracker, winrt::guid const& command, array_view<uint8_t const> inBuffer, array_view<uint8_t> outBuffer);
        static auto TryGetFloat(winrt::Microsoft::MixedReality::EyeTracking::EyeGazeTrackerReading const& reading, winrt::guid const& valueKey, float& value);
        static auto TryGetBool(winrt::Microsoft::MixedReality::EyeTracking::EyeGazeTrackerReading const& reading, winrt::guid const& valueKey, bool& value);
        static auto TryGetInt(winrt::Microsoft::MixedReality::EyeTracking::EyeGazeTrackerReading const& reading, winrt::guid const& valueKey, int32_t& value);
        static auto TryGetVector3(winrt::Microsoft::MixedReality::EyeTracking::EyeGazeTrackerReading const& reading, winrt::guid const& valueKey, winrt::Windows::Foundation::Numerics::float3& value);
    };
    struct WINRT_IMPL_EMPTY_BASES EyeGazeTrackerReading : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerReading
    {
        EyeGazeTrackerReading(std::nullptr_t) noexcept {}
        EyeGazeTrackerReading(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerReading(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES EyeGazeTrackerWatcher : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerWatcher
    {
        EyeGazeTrackerWatcher(std::nullptr_t) noexcept {}
        EyeGazeTrackerWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::EyeTracking::IEyeGazeTrackerWatcher(ptr, take_ownership_from_abi) {}
        EyeGazeTrackerWatcher();
    };
}
#endif
